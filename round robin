Round-Robin Scheduling
✓ The round-robin (RR) scheduling algorithm is designed especially for timesharing systems.
✓ It is similar to FCFS scheduling, but preemption is added to switch between processes.
✓ A small unit of time, called a time quantum or time slice, is defined. A time quantum is generally 
from 10 to 100 milliseconds.
✓ The ready queue is treated as a circular queue. The CPU scheduler goes around the ready queue, 
allocating the CPU to each process for a time interval of up to 1 time quantum.
✓ To implement RR scheduling, we keep the ready queue as a FIFO queue of processes. New 
processes are added to the tail of the ready queue.
✓ The CPU scheduler picks the first process from the ready queue, sets a timer to interrupt after 1 time 
quantum, and dispatches the process. One of two things will then happen.
o The process may have a CPU burst of less than 1 time quantum. In this case, the process itself will 
release the CPU voluntarily. The scheduler will then proceed to the next process in the ready queue.
o Otherwise, if the CPU burst of the currently running process is longer than 1 time quantum, the 
timer will go off and will cause an interrupt to the operating system. A context switch will be 
executed, and the process will be put at the tail of the ready queue. The CPU scheduler will then 
select the next process in the ready queue.
✓ The average waiting time under the RR policy is often long. Consider the following set of processes 
that arrive at time 0, with the length of the CPU burst given in milliseconds: