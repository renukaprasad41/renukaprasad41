Pthread Scheduling
✓ Pthreads identifies the following contention scope values:
o PTHREAD_SCOPE_PROCESS schedules threads using PCS scheduling.
o PTHREAD_SCOPE_SYSTEM schedules threads using SCS scheduling.
✓ On systems implementing the many-to-many model, the PTHREAD_SCOPE_PROCESS policy 
schedules user-level threads onto available LWPs.
✓ The number of LWPs is maintained by the thread library using scheduler activations. The 
PTHREAD_SCOPE_SYSTEM scheduling policy will create and bind an LWP for each user- level 
thread on many-to-many systems, effectively mapping threads using the one-to-one policy.
✓ The Pthread IPC provides the following two functions for getting and setting the contention scope 
policy;
o pthread_attr_setscope (pthread_attr_t *attr, int scope)
o pthread_attr_getscope (pthread_attr_t *attr, int *scope)
✓ The first parameter for both functions contains a pointer to the attribute set for the thread.
✓ The second parameter for the pthread_attr_setscope () function is passed either the 
THREAD_SCOPE_SYSTEM or PTHREAD_SCOPE_PROCESS value, indicating how the 
contention scope is to be set. In the case of pthread_attr_getscope(), this second parameter contains 
a pointer to an int value that is set to the current value of the contention scope. If an error occurs, 
each of these functions returns non-zero values.